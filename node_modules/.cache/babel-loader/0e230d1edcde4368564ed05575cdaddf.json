{"ast":null,"code":"/**\n * React Router DOM v6.28.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_logV6DeprecationWarnings, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n} // One-time check for submitter support\n\n\nlet _formDataSupportsSubmitter = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"), // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n\n  return _formDataSupportsSubmitter;\n}\n\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n\n  return encType;\n}\n\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n\n\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType; // Build a FormData object populated from a form and submitter\n\n    formData = new FormData(form, target); // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  } // Send body for <Form encType=\"text/plain\" so we encode it into text\n\n\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"viewTransition\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"viewTransition\", \"children\"],\n      _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"viewTransition\"]; // HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\n\nconst REACT_ROUTER_VERSION = \"6\";\n\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {// no-op\n}\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    dataStrategy: opts == null ? void 0 : opts.dataStrategy,\n    patchRoutesOnNavigation: opts == null ? void 0 : opts.patchRoutesOnNavigation,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {// no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n\nconst ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nconst FetchersContext = /*#__PURE__*/React.createContext(new Map());\n\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\n\n\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nclass Deferred {\n  constructor() {\n    this.status = \"pending\";\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = value => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n\n      this.reject = reason => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n\n}\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\n\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState();\n  let [vtContext, setVtContext] = React.useState({\n    isTransitioning: false\n  });\n  let [renderDfd, setRenderDfd] = React.useState();\n  let [transition, setTransition] = React.useState();\n  let [interruption, setInterruption] = React.useState();\n  let fetcherData = React.useRef(new Map());\n  let {\n    v7_startTransition\n  } = future || {};\n  let optInStartTransition = React.useCallback(cb => {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  let setState = React.useCallback((newState, _ref2) => {\n    let {\n      deletedFetchers,\n      flushSync: flushSync,\n      viewTransitionOpts: viewTransitionOpts\n    } = _ref2;\n    deletedFetchers.forEach(key => fetcherData.current.delete(key));\n    newState.fetchers.forEach((fetcher, key) => {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    let isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\"; // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(() => setStateImpl(newState));\n      } else {\n        optInStartTransition(() => setStateImpl(newState));\n      }\n\n      return;\n    } // flushSync + startViewTransition\n\n\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(() => {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }); // Update the DOM\n\n      let t = router.window.document.startViewTransition(() => {\n        flushSyncSafe(() => setStateImpl(newState));\n      }); // Clean up after the animation completes\n\n      t.finished.finally(() => {\n        flushSyncSafe(() => {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(() => setTransition(t));\n      return;\n    } // startTransition + startViewTransition\n\n\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]); // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]); // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]); // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]); // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n\n  React.useEffect(() => {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]); // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(() => {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0; // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n  let routerFuture = React.useMemo(() => ({\n    v7_relativeSplatPath: router.future.v7_relativeSplatPath\n  }), [router.future.v7_relativeSplatPath]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future, router.future), [future, router.future]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n} // Memoize to avoid re-renders when updating `ViewTransitionContext`\n\n\nconst MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\n\nfunction DataRoutes(_ref3) {\n  let {\n    routes,\n    future,\n    state\n  } = _ref3;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref4) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref4;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref5) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref5;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref6) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref6;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  React.useEffect(() => UNSAFE_logV6DeprecationWarnings(future), [future]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset,\n    viewTransition\n  } = _ref7,\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext); // Rendered into <a href> for absolute URLs\n\n  let absoluteHref;\n  let isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative,\n    viewTransition\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    viewTransition,\n    children\n  } = _ref8,\n      rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator,\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && viewTransition === true;\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  } // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n\n\n  const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let renderProps = {\n    isActive,\n    isPending,\n    isTransitioning\n  };\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    viewTransition: viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((_ref9, forwardedRef) => {\n  let {\n    fetcherKey,\n    navigate,\n    reloadDocument,\n    replace,\n    state,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    relative,\n    preventScrollReset,\n    viewTransition\n  } = _ref9,\n      props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n\n  let submit = useSubmit();\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey,\n      method: submitMethod,\n      navigate,\n      replace,\n      state,\n      relative,\n      preventScrollReset,\n      viewTransition\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref10) {\n  let {\n    getKey,\n    storageKey\n  } = _ref10;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {})); // Internal hooks\n\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n} // External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative,\n        viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() => // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n\nlet fetcherId = 0;\n\nlet getUniqueFetcherId = () => \"__\" + String(++fetcherId) + \"__\";\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n\n    if (options.navigate === false) {\n      let key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        flushSync: options.flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        flushSync: options.flushSync,\n        viewTransition: options.viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1); // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  })); // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search; // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some(v => v === \"\");\n\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter(v => v).forEach(v => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? \"?\" + qs : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n} // TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\n\nfunction useFetcher(_temp3) {\n  var _route$matches;\n\n  let {\n    key\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(UNSAFE_RouteContext);\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0; // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState(key || defaultKey);\n\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  } // Registration/cleanup\n\n\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]); // Fetcher additions\n\n  let load = React.useCallback((href, opts) => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  let submitImpl = useSubmit();\n  let submit = React.useCallback((target, opts) => {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n\n    return FetcherForm;\n  }, [fetcherKey]); // Exposed FetcherWithComponents\n\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form: FetcherForm,\n    submit,\n    load\n  }, fetcher, {\n    data\n  }), [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(_ref11 => {\n    let [key, fetcher] = _ref11;\n    return _extends({}, fetcher, {\n      key\n    });\n  });\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp4) {\n  let {\n    getKey,\n    storageKey\n  } = _temp4 === void 0 ? {} : _temp4;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref12) {\n  let {\n    when,\n    message\n  } = _ref12;\n  let blocker = useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\n\n\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  let vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename\n  } = useDataRouterContext(DataRouterHook.useViewTransitionState);\n  let path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname; // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit, useViewTransitionState };","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","shouldProcessLinkClick","target","button","createSearchParams","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","getSearchParamsForLocation","locationSearch","defaultSearchParams","searchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","env","NODE_ENV","warning","getFormSubmissionInfo","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","REACT_ROUTER_VERSION","window","__reactRouterVersion","createBrowserRouter","routes","opts","createRouter","future","_extends","v7_prependBasename","history","createBrowserHistory","hydrationData","parseHydrationData","mapRouteProperties","dataStrategy","patchRoutesOnNavigation","initialize","createHashRouter","createHashHistory","_window","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React","createContext","isTransitioning","displayName","FetchersContext","Map","START_TRANSITION","startTransitionImpl","FLUSH_SYNC","flushSyncImpl","ReactDOM","USE_ID","useIdImpl","startTransitionSafe","cb","flushSyncSafe","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","_ref","fallbackElement","router","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","useRef","v7_startTransition","optInStartTransition","useCallback","setState","newState","_ref2","deletedFetchers","flushSync","viewTransitionOpts","current","delete","fetchers","fetcher","set","isViewTransitionUnavailable","startViewTransition","skipTransition","currentLocation","nextLocation","t","finished","finally","useLayoutEffect","subscribe","useEffect","renderPromise","location","v7_partialHydration","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","routerFuture","v7_relativeSplatPath","logV6DeprecationWarnings","Fragment","DataRouterContext","Provider","DataRouterStateContext","Router","navigationType","historyAction","initialized","MemoizedDataRoutes","DataRoutes","_ref3","useRoutesImpl","BrowserRouter","_ref4","children","historyRef","v5Compat","listen","HashRouter","_ref5","HistoryRouter","_ref6","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","_ref7","ref","onClick","relative","reloadDocument","viewTransition","rest","_objectWithoutPropertiesLoose","_excluded","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","_ref8","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","_excluded2","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","endSlashPosition","endsWith","length","isActive","charAt","isPending","renderProps","ariaCurrent","filter","Boolean","join","Form","_ref9","forwardedRef","fetcherKey","onSubmit","props","_excluded3","submit","useSubmit","formAction","useFormAction","formMethod","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","_ref10","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","invariant","useDataRouterState","_temp","replaceProp","useNavigate","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","fetcherId","getUniqueFetcherId","String","UseSubmit","currentRouteId","useRouteId","options","fetch","formEncType","fromRouteId","_temp2","routeContext","RouteContext","match","matches","slice","params","indexValues","hasNakedIndexParam","some","qs","toString","route","index","joinPaths","useFetcher","_temp3","_route$matches","UseFetcher","routeId","id","defaultKey","setFetcherKey","getFetcher","deleteFetcher","load","submitImpl","FetcherForm","get","IDLE_FETCHER","fetcherWithComponents","useFetchers","UseFetchers","from","_ref11","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp4","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","useBeforeUnload","callback","capture","addEventListener","removeEventListener","usePrompt","_ref12","when","blocker","useBlocker","proceed","confirm","setTimeout","reset","currentPath","nextPath","matchPath"],"ignoreList":[],"sources":["../dom.ts","../index.tsx"],"sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  DataStrategyFunction,\n  PatchRoutesOnNavigationFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_logV6DeprecationWarnings as logV6DeprecationWarnings,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  DataStrategyFunction,\n  DataStrategyFunctionArgs,\n  DataStrategyMatch,\n  DataStrategyResult,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  PatchRoutesOnNavigationFunction,\n  PatchRoutesOnNavigationFunctionArgs,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  dataStrategy?: DataStrategyFunction;\n  patchRoutesOnNavigation?: PatchRoutesOnNavigationFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    dataStrategy: opts?.dataStrategy,\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        flushSync: flushSync,\n        viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  React.useEffect(\n    () => logV6DeprecationWarnings(future, router.future),\n    [future, router.future]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  React.useEffect(() => logV6DeprecationWarnings(future), [future]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        viewTransition={viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/v6/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          flushSync: options.flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          flushSync: options.flushSync,\n          viewTransition: options.viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    let indexValues = params.getAll(\"index\");\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\n    if (hasNakedIndexParam) {\n      params.delete(\"index\");\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\n      let qs = params.toString();\n      path.search = qs ? `?${qs}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as useViewTransitionState };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}